<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>incident</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="incident">stateIN1,2^short_descriptionLIKEsoftware^EQ<item display_value="1,2" endquery="false" field="state" goto="false" newquery="false" operator="IN" or="false" value="1,2"/>
            <item endquery="false" field="short_description" goto="false" newquery="false" operator="LIKE" or="false" value="software"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Create Problem for Multiple Incidents</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	var gr = new GlideRecord('incident');
        gr.addQuery('active', true);
        gr.addEncodedQuery('category=software^problem_id=^short_descriptionLIKEsoftware^stateIN1,2');
        gr.query();
        var rowCount = gr.getRowCount();
        if (rowCount >= 2) {

            var prob = new GlideRecord("problem");
            prob.initialize();
            prob.short_description = 'Multiple incidents with the same category have been reported.';
            prob.cmdb_ci = gr.cmdb_ci;
            prob.priority = gr.priority;
            prob.company = gr.company;
            //prob.sys_domain = gr.sys_domain;
            prob.insert();

            while (gr.next()) {
                var num = prob.number;
                gs.addInfoMessage("1Problem " + num + " created");
                //current.setValue('problem_id', prob.getUniqueValue());
                gr.problem_id = prob.sys_id;
                gr.update();
            }
        }
        
    }

)(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-07-19 05:32:39</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>9ddf213a970031101d4838271153af6d</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Create Problem for Multiple Incidents</sys_name>
        <sys_overrides/>
        <sys_package display_value="ITSM task" source="x_826354_itsm_task">10fbe5b2970031101d4838271153af35</sys_package>
        <sys_policy/>
        <sys_scope display_value="ITSM task">10fbe5b2970031101d4838271153af35</sys_scope>
        <sys_update_name>sys_script_9ddf213a970031101d4838271153af6d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-07-19 05:32:39</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=9ddf213a970031101d4838271153af6d"/>
</record_update>
